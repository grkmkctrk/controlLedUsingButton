

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 10 19:07:37 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.31
    15                           ; Generated 13/10/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229                           
   230                           	psect	idataCOMMON
   231  07A6                     __pidataCOMMON:
   232                           
   233                           ;initializer for _b
   234  07A6  3401               	retlw	1
   235  0006                     _PORTBbits	set	6
   236  0006                     _PORTB	set	6
   237  0086                     _TRISB	set	134
   238                           
   239                           	psect	cinit
   240  07F6                     start_initialization:	
   241                           ; #config settings
   242                           
   243  07F6                     __initialization:
   244                           
   245                           ; Initialize objects allocated to COMMON
   246  07F6  120A  118A  27A6  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   247  07FB  00F3               	movwf	__pdataCOMMON& (0+127)
   248  07FC                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  07FC                     __end_of__initialization:
   252  07FC  0183               	clrf	3
   253  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   254                           
   255                           	psect	dataCOMMON
   256  0073                     __pdataCOMMON:
   257  0073                     _b:
   258  0073                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:
   262  0070                     ?_buttonled_init:
   263  0070                     ??_buttonled_init:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_button_driver:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_button_driver:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275                           
   276                           ; 1 bytes @ 0x0
   277  0070                     	ds	3
   278  0073                     ??_main:
   279                           
   280                           	psect	maintext
   281  07AF                     __pmaintext:	
   282                           ; 1 bytes @ 0x3
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 5 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels required when called:    1
   308 ;; This function calls:
   309 ;;		_button_driver
   310 ;;		_buttonled_init
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _main
   318  07AF                     _main:
   319  07AF                     l648:	
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   322                           
   323                           
   324                           ;main.c: 7:     buttonled_init();
   325  07AF  120A  118A  27A7  120A  118A  	fcall	_buttonled_init
   326  07B4                     l650:
   327                           
   328                           ;main.c: 10:     button_driver();
   329  07B4  120A  118A  27BC  120A  118A  	fcall	_button_driver
   330  07B9                     l36:
   331  07B9  120A  118A  2800   	ljmp	start
   332  07BC                     __end_of_main:
   333                           
   334                           	psect	text1
   335  07A7                     __ptext1:	
   336 ;; *************** function _buttonled_init *****************
   337 ;; Defined at:
   338 ;;		line 17 in file "buttonled.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   352 ;;      Params:         0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           
   366                           ;psect for function _buttonled_init
   367  07A7                     _buttonled_init:
   368  07A7                     l628:	
   369                           ;incstack = 0
   370                           ; Regs used in _buttonled_init: [wreg+status,2]
   371                           
   372                           
   373                           ;buttonled.c: 18:     TRISB = 0x02;
   374  07A7  3002               	movlw	2
   375  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   376  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   377  07AA  0086               	movwf	6	;volatile
   378  07AB                     l630:
   379                           
   380                           ;buttonled.c: 19:     PORTB = 0x00;
   381  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   382  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   383  07AD  0186               	clrf	6	;volatile
   384  07AE                     l13:
   385  07AE  0008               	return
   386  07AF                     __end_of_buttonled_init:
   387                           
   388                           	psect	text2
   389  07BC                     __ptext2:	
   390 ;; *************** function _button_driver *****************
   391 ;; Defined at:
   392 ;;		line 22 in file "buttonled.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          3       0       0       0       0
   409 ;;      Totals:         3       0       0       0       0
   410 ;;Total ram usage:        3 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _button_driver
   421  07BC                     _button_driver:
   422  07BC                     l16:	
   423                           ;incstack = 0
   424                           ; Regs used in _button_driver: [wreg-fsr0h+status,2+status,0]
   425                           ;buttonled.c: 23:     while(1){
   426                           
   427                           
   428                           ;buttonled.c: 24:         if(PORTBbits.RB1){
   429  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   430  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   431  07BE  1C86               	btfss	6,1	;volatile
   432  07BF  2FC1               	goto	u11
   433  07C0  2FC2               	goto	u10
   434  07C1                     u11:
   435  07C1  2FE5               	goto	l642
   436  07C2                     u10:
   437  07C2                     l18:
   438  07C2  1886               	btfsc	6,1	;volatile
   439  07C3  2FC5               	goto	u21
   440  07C4  2FC6               	goto	u20
   441  07C5                     u21:
   442  07C5  2FC2               	goto	l18
   443  07C6                     u20:
   444  07C6                     l634:
   445                           
   446                           ;buttonled.c: 26:             b ^= 1;
   447  07C6  3001               	movlw	1
   448  07C7  00F0               	movwf	??_button_driver
   449  07C8  0870               	movf	??_button_driver,w
   450  07C9  06F3               	xorwf	_b,f
   451  07CA  2FE5               	goto	l642
   452  07CB                     l636:
   453                           
   454                           ;buttonled.c: 30:                 PORTBbits.RB0 ^= 1;_delay((unsigned long)((500)*(40000
      +                          00/4000.0)));
   455  07CB  0806               	movf	6,w	;volatile
   456  07CC  3901               	andlw	1
   457  07CD  00F0               	movwf	??_button_driver
   458  07CE  3001               	movlw	1
   459  07CF  06F0               	xorwf	??_button_driver,f
   460  07D0  0806               	movf	6,w	;volatile
   461  07D1  0670               	xorwf	??_button_driver,w
   462  07D2  39FE               	andlw	-2
   463  07D3  0670               	xorwf	??_button_driver,w
   464  07D4  0086               	movwf	6	;volatile
   465  07D5                     l638:
   466  07D5  3003               	movlw	3
   467  07D6  00F2               	movwf	??_button_driver+2
   468  07D7  308A               	movlw	138
   469  07D8  00F1               	movwf	??_button_driver+1
   470  07D9  3055               	movlw	85
   471  07DA  00F0               	movwf	??_button_driver
   472  07DB                     u37:
   473  07DB  0BF0               	decfsz	??_button_driver,f
   474  07DC  2FDB               	goto	u37
   475  07DD  0BF1               	decfsz	??_button_driver+1,f
   476  07DE  2FDB               	goto	u37
   477  07DF  0BF2               	decfsz	??_button_driver+2,f
   478  07E0  2FDB               	goto	u37
   479  07E1  2FE2               	nop2
   480                           
   481                           ;buttonled.c: 31:                 break;
   482  07E2  2FBC               	goto	l16
   483  07E3                     l24:	
   484                           ;buttonled.c: 32:             case 0:
   485                           
   486                           
   487                           ;buttonled.c: 33:                 PORTBbits.RB0 = 1;
   488  07E3  1406               	bsf	6,0	;volatile
   489                           
   490                           ;buttonled.c: 34:                 break;
   491  07E4  2FBC               	goto	l16
   492  07E5                     l642:
   493  07E5  0873               	movf	_b,w
   494  07E6  00F0               	movwf	??_button_driver
   495  07E7  01F1               	clrf	??_button_driver+1
   496                           
   497                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   498                           ; Switch size 1, requested type "simple"
   499                           ; Number of cases is 1, Range of values is 0 to 0
   500                           ; switch strategies available:
   501                           ; Name         Instructions Cycles
   502                           ; simple_byte            4     3 (average)
   503                           ; direct_byte           11     8 (fixed)
   504                           ; jumptable            260     6 (fixed)
   505                           ;	Chosen strategy is simple_byte
   506  07E8  0871               	movf	??_button_driver+1,w
   507  07E9  3A00               	xorlw	0	; case 0
   508  07EA  1903               	skipnz
   509  07EB  2FED               	goto	l672
   510  07EC  2FBC               	goto	l16
   511  07ED                     l672:
   512                           
   513                           ; Switch size 1, requested type "simple"
   514                           ; Number of cases is 2, Range of values is 0 to 1
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte            7     4 (average)
   518                           ; direct_byte           14     8 (fixed)
   519                           ; jumptable            260     6 (fixed)
   520                           ;	Chosen strategy is simple_byte
   521  07ED  0870               	movf	??_button_driver,w
   522  07EE  3A00               	xorlw	0	; case 0
   523  07EF  1903               	skipnz
   524  07F0  2FE3               	goto	l24
   525  07F1  3A01               	xorlw	1	; case 1
   526  07F2  1903               	skipnz
   527  07F3  2FCB               	goto	l636
   528  07F4  2FBC               	goto	l16
   529  07F5  0008               	return
   530  07F6                     __end_of_button_driver:
   531  007E                     btemp	set	126	;btemp
   532  007E                     wtemp0	set	126
   533                           
   534                           	psect	config
   535                           
   536                           ;Config register CONFIG @ 0x2007
   537                           ;	Oscillator Selection bits
   538                           ;	FOSC = XT, XT oscillator
   539                           ;	Watchdog Timer Enable bit
   540                           ;	WDTE = OFF, WDT disabled
   541                           ;	Power-up Timer Enable bit
   542                           ;	PWRTE = OFF, PWRT disabled
   543                           ;	Brown-out Reset Enable bit
   544                           ;	BOREN = ON, BOR enabled
   545                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   546                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   547                           ;	Data EEPROM Memory Code Protection bit
   548                           ;	CPD = OFF, Data EEPROM code protection off
   549                           ;	Flash Program Memory Write Enable bits
   550                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   551                           ;	In-Circuit Debugger Mode bit
   552                           ;	DEBUG = 0x1, unprogrammed default
   553                           ;	Flash Program Memory Code Protection bit
   554                           ;	CP = OFF, Code protection off
   555  2007                     	org	8199
   556  2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_button_driver

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _button_driver
                     _buttonled_init
 ---------------------------------------------------------------------------------
 (1) _buttonled_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _button_driver                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _button_driver
   _buttonled_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       4      12        0.0%
ABS                  0      0       4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 10 19:07:37 2020

                      _b 0073                       l13 07AE                       l24 07E3  
                     l16 07BC                       l18 07C2                       l36 07B9  
                     u10 07C2                       u11 07C1                       u20 07C6  
                     u21 07C5                       u37 07DB                      l630 07AB  
                    l634 07C6                      l642 07E5                      l650 07B4  
                    l636 07CB                      l628 07A7                      l638 07D5  
                    l672 07ED                      l648 07AF         ??_buttonled_init 0070  
                   _main 07AF                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 07BC                   ??_main 0073   __size_of_button_driver 003A  
           __pdataCOMMON 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          _button_driver 07BC               __pmaintext 07AF           ?_button_driver 0070  
                __ptext1 07A7                  __ptext2 07BC     end_of_initialization 07FC  
__size_of_buttonled_init 0008                _PORTBbits 0006          ??_button_driver 0070  
          __pidataCOMMON 07A6      start_initialization 07F6                ___latbits 0002  
         _buttonled_init 07A7   __end_of_buttonled_init 07AF          ?_buttonled_init 0070  
  __end_of_button_driver 07F6            __size_of_main 000D  
